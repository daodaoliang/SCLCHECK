/*
 *  @file  : ScdChecker.h
 *  @author: luteng
 *  @date  : 2015-06-17 14:01:58.533
 *  @note  : Generated by SlxTemplates
 */

#ifndef _SCDCHECKER_H
#define _SCDCHECKER_H

#include "../ScdCheckCommon/Common.h"
#include "../ScdCheckCommon/VtdTools.h"
#include "CheckItems/XmlCheck.h"
#include "CheckItem.h"
#include <map>
#include <boost/bimap.hpp>

enum ScdCheckerStatus
{
    SCS_INITTING,       // 初始化中
    SCS_INITED,         // 初始化完毕
    SCS_STARTTING,      // 正在开始检测
    SCS_STARTED,        // 开始阶段完毕
    SCS_CHECKING,       // 检测中
    SCS_CHECKED,        // 检测阶段完毕
    SCS_ENDDING,        // 正在结束
    SCS_ENDED,          // 已结束
};

class CScdChecker : public CSingleInstance<CScdChecker>, CNoCopy
{
    friend CXmlCheck;

    typedef boost::bimap<int, int> bm_type;

public:
    // 构造
    CScdChecker();

    // 析构
    virtual ~CScdChecker();

    // 设定待处理文件
    bool SetFilePathToCheck(const char *lpFilePath);

    // 获取检测文件路径
    std::string GetFilePathToCheck() const;

public:
    // 各个检测项想检测器注册自身
    bool RegisterCheckItem(CCheckItemBase *pCheckItem);

public:
    // 开始检测过程
    bool CheckStart();

    // 实际检测过程
    bool CheckAll();

    // 结束检测过程
    bool CheckEnd();

public:
    // 获取已存在的vtd导航器
    com_ximpleware::VTDNav *GetExistingVtdNav() const;

private:
    // 设定vtd导航器，由CXmlCheck内部调用
    void SetExistingVtdNav(com_ximpleware::VTDNav *pVn);

    // 获取检测文件的大小并保存起来
    void StoreSizeOfFileToCheck(int nSize);

public:
    // 从文件偏移量计算行号
    int CalcRowNumberFromOffset(int nOffset) const;

    // 从行号得到行首偏移和行内容大小
    int CalcOffsetAndSizeFromRowNumber(int nRowNumber, int *pSize = NULL) const;

    // 从偏移量计算当前行内容
    std::string GetRowContentByOffset(int nOffset) const;

    // 从行号计算当前行内容
    std::string GetRowContentByRowNumber(int nRowNumber) const;

private:
    // 构建行号偏移量对应表
    bool BuildRowNumberOffsetMap();

private:
    // vtd导航器
    com_ximpleware::VTDNav *m_pVn;

    // 待检测文件大小
    int m_nFileSize;

    // 所有的检测项
    std::map<string, CCheckItemBase *> m_mapCheckItems;

    // CScdChecker当前所处的状态
    ScdCheckerStatus m_scs;

    // 待检测文件路径
    std::string m_strFilePath;

    // 行号偏移量对应表
    bm_type m_bimapRowNumberOffset;
};

#endif /* _SCDCHECKER_H */