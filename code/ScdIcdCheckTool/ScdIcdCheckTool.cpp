/*
 *  @file  : ScdIcdCheckTool.cpp
 *  @author: user
 *  @date  : 2015-08-11 10:59:37.352
 *  @note  : Generated by SlxTemplates
 */

// ScdIcdCheckTool.cpp : Defines the class behaviors for the application.
//

#include "stdafx.h"
#include "ScdIcdCheckTool.h"

#include "Shared\SuperDog.h"
#include "Source\WndPreview.h"

#ifdef _DEBUG
#define new DEBUG_NEW
#undef THIS_FILE
static char THIS_FILE[] = __FILE__;
#endif

/////////////////////////////////////////////////////////////////////////////
// CScdIcdCheckToolApp

BEGIN_MESSAGE_MAP(CScdIcdCheckToolApp, CWinApp)
	//{{AFX_MSG_MAP(CScdIcdCheckToolApp)
		// NOTE - the ClassWizard will add and remove mapping macros here.
		//    DO NOT EDIT what you see in these blocks of generated code!
	//}}AFX_MSG
	ON_COMMAND(ID_HELP, CWinApp::OnHelp)
END_MESSAGE_MAP()

/////////////////////////////////////////////////////////////////////////////
// CScdIcdCheckToolApp construction

// 标使程序单例的GUID
CScdIcdCheckToolApp::CScdIcdCheckToolApp():m_siSingleInst(_T("SCLHeat"))
{
	// TODO: add construction code here,
	// Place all significant initialization in InitInstance
}

/////////////////////////////////////////////////////////////////////////////
// The one and only CScdIcdCheckToolApp object

CScdIcdCheckToolApp theApp;

/////////////////////////////////////////////////////////////////////////////
// CScdIcdCheckToolApp initialization

BOOL CScdIcdCheckToolApp::InitInstance()
{
	AfxEnableControlContainer();

	// Standard initialization
	// If you are not using these features and wish to reduce the size
	//  of your final executable, you should remove from the following
	//  the specific initialization routines you do not need.

#if _MSC_VER == 1200
#ifdef _AFXDLL
	Enable3dControls();			// Call this when using MFC in a shared DLL
#else
	Enable3dControlsStatic();	// Call this when linking to MFC statically
#endif
#endif

#ifdef _GrandDOG
    if (!CheckSuperDog())
    {
        AfxMessageBox(_T("读取安全狗认证失败！"));
        return false;
    }
#endif

    // 判断进程中是否已经运行有本程序的实例
    BOOL bRunning = !m_siSingleInst.AppStart();
    if(bRunning)
    {
        // 如果已经存在其它已经运行实例，激活该实例
        HWND hMainWnd;
        m_siSingleInst.WaitForInitCompleted(&hMainWnd, sizeof(HWND));

        SendMessage(hMainWnd, WM_SYSCOMMAND,SC_RESTORE ,NULL);
        SetForegroundWindow(hMainWnd);

        return FALSE;
    }
    else
    {
        CWinApp::InitInstance();

        // 初始化GDI+运行环境
        GdiplusStartupInput gdiplusStartupInput;
        GdiplusStartup(&m_GdiplusToken, &gdiplusStartupInput, NULL);

        CWnd * pMainWnd = new CWndPreview();

        // 创建主窗口，程序退出时CDlgMainFrame会自动释放
        LPCTSTR lpszClassName=AfxRegisterWndClass(CS_HREDRAW|CS_VREDRAW,
            ::LoadCursor(NULL,MAKEINTRESOURCE(IDC_ARROW)));
        // WS_EX_APPWINDOW可以让子窗口显示在任务栏中
        m_pMainWnd = pMainWnd;
        BOOL bResult = pMainWnd->CreateEx(WS_EX_APPWINDOW, lpszClassName, NULL, 
            WS_POPUP|WS_VISIBLE, 0, 0, 0, 0, NULL, 0);   
        if(!bResult)
        {
            AfxMessageBox(_T("窗口初始化失败！"));
            return FALSE;
        }
        pMainWnd->UpdateWindow();
        pMainWnd->ShowWindow(SW_SHOW);
        // 保存当前进程主窗口，以便进程实例进行激活
        HWND hMainWnd = m_pMainWnd->GetSafeHwnd();
        m_siSingleInst.InitCompleted(&hMainWnd, sizeof(hMainWnd));

        return TRUE;
    }
}


int CScdIcdCheckToolApp::ExitInstance()
{
    // TODO: 在此添加专用代码和/或调用基类
    // 释放界面资源
    CImageInfo::Instance()->Release();

    // 清理 gdi+ 环境
    GdiplusShutdown(m_GdiplusToken);

    // 清理程序单例资源
    m_siSingleInst.AppEnd();

    return CWinApp::ExitInstance();
}
